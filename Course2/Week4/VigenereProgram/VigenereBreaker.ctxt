#BlueJ class context
comment0.params=maxKeyLength
comment0.target=VigenereBreaker(int)
comment1.params=
comment1.target=VigenereBreaker()
comment1.text=\n\ Constructor\n
comment10.params=dictionary
comment10.target=char\ mostCommonCharIn(java.util.HashSet)
comment11.params=dictionary
comment11.target=java.util.HashMap\ countLetterDict(java.util.HashSet)
comment12.params=encrypted\ dictionary\ alpha
comment12.target=java.lang.String\ breakForLanguage(java.lang.String,\ java.util.HashSet,\ java.lang.String)
comment13.params=
comment13.target=void\ testBreakForLanguage()
comment14.params=encrypted\ languages
comment14.target=java.lang.String\ breakForAllLanguages(java.lang.String,\ java.util.HashMap)
comment15.params=
comment15.target=void\ testBreakForAllLanguages()
comment2.params=message\ whichSlice\ totalSlices
comment2.target=java.lang.String\ sliceString(java.lang.String,\ int,\ int)
comment3.params=encrypted\ klength\ mostCommon\ alpha
comment3.target=int[]\ tryKeyLength(java.lang.String,\ int,\ char,\ java.lang.String)
comment4.params=encrypted\ kLength\ mostCommon\ alpha
comment4.target=java.lang.String\ breakVigenere(java.lang.String,\ int,\ char,\ java.lang.String)
comment5.params=kLength\ mostCommon
comment5.target=void\ testTryKeyLength(int,\ char)
comment6.params=kLength\ mostCommon
comment6.target=void\ testBreakVigenere(int,\ char)
comment7.params=fr
comment7.target=java.util.HashSet\ readDictionary(edu.duke.FileResource)
comment8.params=message\ dictionary
comment8.target=int\ countWords(java.lang.String,\ java.util.HashSet)
comment9.params=freqLet
comment9.target=char\ mostFreqLet(java.util.HashMap)
numComments=16
